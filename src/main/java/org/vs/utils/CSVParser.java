package org.vs.utils;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;
import org.apache.commons.lang3.StringUtils;
import org.vs.application.model.CVEResult;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.util.ArrayList;
import java.util.List;

public class CSVParser {
    public List<CVEResult> csvToCVEParser(File input) throws IOException {
        return parseCsvFile(input);
    }

    public List<CVEResult> parseCsvFile(File input) throws IOException {
        Reader in = new FileReader(input.getAbsoluteFile());
        CSVFormat csvFormat = CSVFormat.DEFAULT.builder()
                .setHeader(VSUtils.HEADERS)
                .setSkipHeaderRecord(true)
                .setIgnoreEmptyLines(true)
                .build();

        Iterable<CSVRecord> records = csvFormat.parse(in);
        List<CVEResult> resultsList = new ArrayList<>();
        for (CSVRecord record : records) {
            if (record.values().length != 1 && !StringUtils.equalsIgnoreCase(record.get("Name"), VSUtils.HEADERS[1])) {
                CVEResult cveResults = new CVEResult();
                cveResults.setName(record.get("Name"));
                cveResults.setVersion(record.get("Version"));
                resultsList.add(cveResults);
            }
        }

        return resultsList;
    }
}
